
detalhes_relevantes = ""
for detalhes in introducao.pre_event_world.relevant_details:
    detalhes_relevantes += f"{detalhes} \n"

pistas = ""
for pistas in introducao.problem.clues:
    pistas += f"{pistas} \n"

arco_atual = 0
prompt_arcos = f"""Preencha os dados de saida para Arco atual com base nas Informaçõess e instruções a seguir:

## General Description:
    * Description:
        {introducao.pre_event_world.general_description}
    * Relevant Details:
        {detalhes_relevantes}
    * Problem:
        {introducao.problem.main_problem}
    * Clues:
        {pistas}
    * Consequences:
        - Sucesso: {introducao.consequences.success}
        - Falha: {introducao.consequences.failure}

## Arco Atual
* Local atual: {lugares[arco_atual]}
* Evento atual: {Eventos[arco_atual]}.
* Objetivo arco 1: {introducao.solution[arco_atual].description}

## Proximo Arco
* Proximo Local: {lugares[arco_atual+1]}
* Proximo Evento: {Eventos[arco_atual+1]}.
* Proximo Objetivo: {introducao.solution[arco_atual+1].description}     

## Instruções:
1. Defina o Objetivo do Arco: Determine o propósito principal do arco na narrativa geral.
    * Pergunta-chave: O que os jogadores devem alcançar neste arco?
    * Seja especifico no problema a ser apresentado. (diga qual é o problema)

2. Estabeleça o Local e o Evento Principal: Use o **Local atual** onde o arco se passa (cidade, floresta, ruína, etc.) e descreva o **Evento atual** que ocorrerá nesse local.
    * Local: Dê detalhes visuais e temáticos para o cenário.
    * Evento Local: Planeje uma situação ou desafio central. 

3. Liste os Encontros e Desafios: Planeje uma sequência de eventos ou encontros que os jogadores enfrentarão, garantindo uma variedade de desafios:
    * Encontros de Exploração: Descobrir segredos ou perigos do ambiente.
    * Encontros Sociais: Interagir com NPCs que fornecem informações ou criam conflitos. 
    * Encontros de Combate: Testar as habilidades do grupo com batalhas relevantes para o tema. 
4. Prepare o Cliffhanger e a Conexão com o Próximo Arco: Conclua o arco com um evento marcante que deixa um gancho para o próximo.
    * Cliffhanger: Algo inesperado que mantém a curiosidade e a tensão.
    * Conexão: Indique o objetivo do próximo arco (**Proximo objetivo**) para os jogadores, conectando os eventos atuais com a próxima etapa da aventura.

5. Seja especifico e detalhado ao apresentar os detalhes, certifique-se de que eles sejam concisos e detalhados, proporcionando uma experiência narrativa atraente para os jogadores.

6. Gere a saida apena para o arco atual.

## Saida
Você deve responder em formato JSON seguindo o seguinte esquema:\n"""

schema_json_string = "{\n"
schema_json_string += "  \"arcos\": [\n"
schema_json_string += "    {\n"
schema_json_string += "      \"title\": \"O título principal do arco atual, resumindo sua temática ou objetivo central, começando com: 'Arco: ...'.\",\n"
schema_json_string += "      \"objective\": \"O objetivo principal do arco, indicando o que os jogadores devem alcançar.\",\n"
schema_json_string += "      \"scenes\": [\n"
schema_json_string += "        {\n"
schema_json_string += "          \"local\": {\n"
schema_json_string += "            \"name\": \"O nome do local onde os eventos da cena ocorrem.\",\n"
schema_json_string += "            \"description\": \"Uma descrição detalhada do local, incluindo suas características marcantes e atmosfera.\"\n"
schema_json_string += "          },\n"
schema_json_string += "          \"events\": [\n"
schema_json_string += "            \"Uma lista de eventos que ocorrem na cena, descrevendo desafios, encontros ou revelações importantes.\"\n"
schema_json_string += "          ]\n"
schema_json_string += "        }\n"
schema_json_string += "      ],\n"
schema_json_string += "      \"summary\": \"Um resumo do arco em 3-4 frases, abordando as ações dos jogadores, encontro com personagens e os resultados esperados.\",\n"
schema_json_string += "      \"cliffhanger\": \"Um evento ou revelação que conecta este arco ao próximo, mantendo o interesse dos jogadores.\"\n"
schema_json_string += "    }\n"
schema_json_string += "  ]\n"
schema_json_string += "}\n"

aventura_schema = json.loads(schema_json_string)

class Place(BaseModel):
    name: str
    description: str

class Scenes(BaseModel):
    local: Place
    events: List[str]

class Arco(BaseModel):
    title: str
    objective: str
    scenes: List[Scenes]    
    summary: str  
    cliffhanger: str

class Aventura(BaseModel):
    arcos: List[Arco]


system_prompt = """Você é um especialista em criação de histórias para RPG."""

arcos = model_response(system_prompt, prompt_arcos, aventura_schema, Aventura)
arcos.model_dump()